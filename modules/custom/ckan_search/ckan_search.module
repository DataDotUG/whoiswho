<?php
/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function ckan_search_block_info() {
  $blocks['ckan_search_block'] = array(
    // info: The name of the block.
    'info' => t('CKAN Search Block'),
    // Block caching options (per role, per user, etc.)
    // DRUPAL_CACHE_PER_ROLE is the default.
    'cache' => DRUPAL_CACHE_PER_ROLE,
  );

  return $blocks;
}
/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function ckan_search_block_configure($delta = '') {
  $form = array();
  // The $delta parameter tells us which block is being configured.
  // In this example, we'll allow the administrator to customize
  // the text of the 'configurable text string' block defined in this module.
  if ($delta == 'ckan_search_block') {
    // All we need to provide is the specific configuration options for our
    // block. Drupal will take care of the standard block configuration options
    // (block title, page visibility, etc.) and the save button.
    $form['ckan_search_url'] = array(
      '#type' => 'textfield',
      '#title' => t('CKAN URL'),
      '#size' => 100,
      '#description' => t('The URL of the CKAN server we are going to redirect the search to.'),
      '#default_value' => variable_get('ckan_search_url', 'http://datahub.io.'),
    );
    $form['ckan_search_suggestions'] = array(
      '#type' => 'textarea',
      '#title' => t('Suggestions'),
      '#size' => 100,
      '#description' => t('A list of suggestions, comma separated, that are shown (if you use bootstrap).'),
      '#default_value' => variable_get('ckan_search_suggestions', ''),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * This hook declares how the configured options for a block
 * provided by this module are saved.
 */
function ckan_search_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'ckan_search_block') {
    // Have Drupal save the string to the database.
    variable_set('ckan_search_url', $edit['ckan_search_url']);
    variable_set('ckan_search_suggestions', $edit['ckan_search_suggestions']);
  }
}
/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function ckan_search_block_view($delta = '') {
  // The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'ckan_search_block':
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Search CKAN');
      // The content of the block is typically generated by calling a custom
      // function.
      $block['content'] = ckan_search_contents($delta);
      break;
  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function ckan_search_contents($which_block) {
  switch ($which_block) {
    case 'ckan_search_block':
      // Modules would typically perform some database queries to fetch the
      // content for their blocks. Here, we'll just use the variable set in the
      // block configuration or, if none has set, a default value.
      // Block content can be returned in two formats: renderable arrays
      // (as here) are preferred though a simple string will work as well.
      // Block content created through the UI defaults to a string.
      $url = variable_get('ckan_search_url', 'http://datahub.io.');
      if ($suggestions = variable_get('ckan_search_suggestions', '')) {
        $asuggestions = explode(",", $suggestions);
      };

      $jsuggestions = json_encode($asuggestions);
      $result = array(
      '#markup' => '<form role="search" method="get" class="search-form form-inline" action="' . $url . '/dataset">
  <div class="input-group">
    <input type="search" id="search-header" title="' . "Example searches: " . $suggestions . '" data-strings=\'{"targets":' . $jsuggestions . '}\' value="" name="q" class="search-field form-control" placeholder="' . $asuggestions[0] . '">
    <input type="hidden" name="sort" value="score desc, name asc">
      <span class="input-group-btn">
      <button type="submit" class="search-submit btn btn-default">
           <i class="fa fa-search"></i>
           <span class="sr-only">Search</span>
       </button>
    </span>
  </div>
</form>',


      );
      return $result;

  }
}
